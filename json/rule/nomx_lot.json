{"headers":[{"key":"pos","value":true,"style":"boolean"},{"key":"nowLot","value":1,"style":"number"}],"items":[{"key":"o","value":0,"style":"number","css":"o"},{"key":"x","value":0,"style":"number","css":"x"},{"key":"combo","value":0,"style":"number","css":"combo"}],"priority":[{"key":"status","order":"desc","alter":["win",2,"lose",0,1]},{"key":"o","order":"desc"},{"key":"x","order":"asc"},{"key":"paperRank","order":"asc"}],"actions":[{"name":"○","css":"action_o","button_css":"btn btn-primary btn-lg","keyArray":"k1","tweet":"o","enable0":"return (player.status == 'normal' && !header.playoff);","action0":"// ○を加算\nplayer.o++;\n// コンボ計算\nif (property.combo > 0 && player.combo === 1) {\n  player.o += property.combo;\n}\n// コンボ管理\nif (property.combo > 0) {\n  players.map(function(p) {\n    p.combo = 0;\n  });\n  player.combo = 1;\n}\nsetMotion(player, 'o');\naddQCount(players, header, property);","nowait":false},{"name":"×","css":"action_x","button_css":"btn btn-danger btn-lg","keyArray":"k2","tweet":"x","enable0":"return (player.status == 'normal' && !header.playoff);","action0":"player.x++;\nif (property.combo > 0) {\n  player.combo = 0;\n}\n\nsetMotion(player, 'x');\naddQCount(players, header, property);","nowait":false}],"global_actions":[{"name":"thru","button_css":"btn btn-default","group":"rule","keyboard":"Space","tweet":"thru","enable0":"return true;","action0":"addQCount(players, header, property);","nowait":false},{"name":"pos","button_css":"btn btn-default","group":"rule","enable0":"return true;","action0":"header.pos = !header.pos;","keyArray":"","nowait":false}],"global_actions_repeat":[{"name":"","button_css":"btn btn-default","group":"rule","indexes0":"return property.lots;","enable1":"return true;","action1":"header.nowLot = index;\nheader.qCount = 1;\nheader.openRank = 0;","nowait":false}],"tweet":{"o":"[Heat${lot}] ${handleName}◯　→${o}◯ ${x}×","x":"[Heat${lot}]${handleName}×　→${o}◯ ${x}×","thru":"[Heat${nowLot}]スルー"},"judgement":"angular.forEach(players.filter(function(item) {\n  /* rankがない人に限定 */\n  return (item.rank === 0);\n}), function(player, i) {\n  /* win条件 */\n  if (player.o >= property.winningPoint) {\n    win(player, players, header, property);\n    player.o = property.winningPoint;\n    if (property.combo > 0) {\n      player.combo = 0;\n    }\n    timerStop();\n  }\n  /* lose条件 */\n  if (player.x >= property.losingPoint) {\n    lose(player, players, header, property);\n    timerStop();\n  }\n\n});","calc":"var key = 0;\n\n// ペナルティ計算\nheader.penalty = property.penalty - players.filter(function(player){\n    return player.status == \"win\";\n}).length;\n\nangular.forEach(players, function(player, index) {\n  // pinch, chance\n  player.chance = (player.o + 1 >= property.winningPoint) &&\n    (player.status == 'normal');\n  player.pinch = (player.x + 1 >= property.losingPoint) &&\n    (player.status == 'normal');\n\n  // キーボード入力時の配列の紐付け ローリング等の特殊形式でない場合はこのままでOK\\\n  player.keyIndex = player.position;\n  if (player.lot == header.nowLot) {\n    if (header.pos) {\n      player.line = \"line1\";\n      player.keyIndex = (key++);\n    } else {\n      player.line = \"line2\";\n      player.keyIndex = (key++);\n    }\n  } else {\n    player.line = \"left\";\n    player.keyIndex = 999;\n  }\n});","lines":[{"key":"line1","xType":true,"yType":false,"invisible":false,"zoom":1,"left":0,"right":1,"top":0,"y":0.5,"orderBy":"position"},{"key":"line2","orderBy":"priority","xType":true,"yType":false,"invisible":false,"zoom":1,"left":0,"right":1,"y":0.5}]}